version: "2.1"
services:
  s3:
    container_name: s3
    image:  minio/minio:RELEASE.2022-03-08T22-28-51Z
    restart: unless-stopped
    ports:
      - "9000:9000"
    environment:
      - MINIO_ROOT_USER=${AWS_ACCESS_KEY_ID}
      - MINIO_ROOT_PASSWORD=${AWS_SECRET_ACCESS_KEY}
      - VIRTUAL_HOST=${S3_ARTIFACT_STORE_URL}
      - VIRTUAL_PORT=9001
    entrypoint: sh
    command: -c 'mkdir -p /data/${AWS_BUCKET_NAME} && minio server /data --console-address ":9001"'
    networks:
      - port-forward
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 15s
      timeout: 20s
      retries: 3
    volumes:
      - minio:/data

  db:
    image: postgres:14.2
    restart: unless-stopped
    container_name: mlflow-db
    expose:
      - ${DB_PORT}
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PW}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "${DB_USER}"]
      interval: 15s
      timeout: 10s
      retries: 5
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - port-forward

  tracker:
    container_name: tracker
    image: mlflow-tracker
    restart: unless-stopped
    build:
      context: ./
      dockerfile: Dockerfile
    depends_on:
      - "s3"
      - "db"
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_REGION}
      - MLFLOW_S3_ENDPOINT_URL=http://s3:9000
      - BACKEND=postgresql://${DB_USER}:${DB_PW}@db:${DB_PORT}/${DB_NAME}
      - VIRTUAL_HOST=${MLFLOW_URL}
      - VIRTUAL_PORT=${MLFLOW_PORT}
    networks:
      - port-forward 
    entrypoint: >
      /bin/sh -c "
        /app/wait-for-it.sh db:5432 --timeout=60 -- \
        mlflow server --port ${MLFLOW_PORT} --host 0.0.0.0 \
          --backend-store-uri $${BACKEND} \
          --default-artifact-root s3://${AWS_BUCKET_NAME}/ 
      "
    healthcheck:
      test: ["CMD", "wget", "-O/dev/null", "-q", "http://localhost:${MLFLOW_PORT}/"]
      interval: 15s
      timeout: 15s
      retries: 3
  create_s3_buckets:
    image: minio/mc
    depends_on:
      - "s3"
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc alias set minio http://s3:9000 '${AWS_ACCESS_KEY_ID}' '${AWS_SECRET_ACCESS_KEY}') do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc mb minio/mlflow;
      exit 0;
      "
    networks:
      - port-forward 
networks:
  port-forward:
    external: true 
volumes:
  db:
  minio:
